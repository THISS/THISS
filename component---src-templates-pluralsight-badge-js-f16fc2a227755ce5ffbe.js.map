{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/templates/pluralsight-badge.js"],"names":["links","title","uri","NavLinks","className","map","link","idx","key","to","href","target","Header","siteTitle","subTitle","useState","toggled","setToggled","onClick","defaultProps","Layout","children","query","render","data","site","siteMetadata","subtitle","Date","getFullYear","badge","pluralsightJson","score","Math","floor","percentile","dateCompleted","level","fluid","localImage","childImageSharp","alt","style","float","marginRight","width"],"mappings":"0JAKMA,G,UAAQ,CACZ,CACEC,MAAO,OACPC,IAAK,KAEP,CACED,MAAO,WACPC,IAAK,UAEP,CACED,MAAO,SACPC,IAAK,WAEP,CACED,MAAO,OACPC,IAAK,WAIHC,EAAW,kBACf,yBAAKC,UAAU,kCACZJ,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACT,yBAAKH,UAAU,OAAOI,IAAKD,GACzB,kBAAC,OAAD,CAAME,GAAIH,EAAKJ,KAAMI,EAAKL,WAG9B,yBAAKG,UAAU,QACb,uBAAGM,KAAK,2BAA2BC,OAAO,WAA1C,WAIF,yBAAKP,UAAU,QACb,uBACEM,KAAK,gDACLC,OAAO,WAFT,eAUAC,EAAS,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAAe,EACZC,oBAAS,GAAhCC,EADmC,KAC1BC,EAD0B,KAE1C,OACE,4BAAQb,UAAU,oCAChB,6BAASA,UAAU,OACjB,yBAAKA,UAAU,eACb,4BACE,kBAAC,OAAD,CAAMK,GAAG,KAAKI,IAEhB,wBAAIT,UAAU,QAAQU,IAExB,yBAAKV,UAAU,+CACb,4BACEA,UAAS,uBAAwBY,GAAW,WAC5CE,QAAS,kBAAMD,GAAYD,KAE3B,0BAAMZ,UAAU,kBAChB,0BAAMA,UAAU,kBAChB,0BAAMA,UAAU,oBAGpB,yBAAKA,UAAU,kDACZY,GAAW,kBAAC,EAAD,OAEd,yBAAKZ,UAAU,kDACb,kBAAC,EAAD,UAYVQ,EAAOO,aAAe,CACpBN,UAAU,GACVC,SAAS,IAGIF,Q,UC7BAQ,IA9CA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,kBAAC,cAAD,CACEC,MAAK,aAULC,OAAQ,SAAAC,GAAI,OACV,yBAAKpB,UAAU,yCACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,oEACb,yBAAKA,UAAU,OACb,kBAAC,EAAD,CAAQS,UAAWW,EAAKC,KAAKC,aAAazB,MAAOa,SAAUU,EAAKC,KAAKC,aAAaC,aAGtF,yBAAKvB,UAAU,qCACb,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAQS,UAAWW,EAAKC,KAAKC,aAAazB,MAAOa,SAAUU,EAAKC,KAAKC,aAAaC,aAGtF,yBAAKvB,UAAU,wDACb,yBAAKA,UAAU,wDACb,0BAAMA,UAAU,oBAAoBiB,GACpC,sCACK,IAAIO,MAAOC,cADhB,mBAGE,uBAAGnB,KAAK,4BAAR,oB,kCC7ChB,uGAMe,sBAAe,IACtBoB,EADqB,EAAXN,KACGO,gBACnB,OACE,kBAAC,IAAD,KACE,6BACE,4BAAKD,EAAM7B,OACX,6BAAM6B,EAAME,OACZ,6BAAMC,KAAKC,MAAMJ,EAAMK,YAAvB,KACA,6BAAML,EAAMM,eACZ,6BAAMN,EAAMO,OACZ,kBAAC,IAAD,CACEC,MAAOR,EAAMS,WAAWC,gBAAgBF,MACxCG,IAAKX,EAAM7B,MACXyC,MAAO,CAAEC,MAAO,OAAQC,YAAa,OAAQC,MAAO,UAOvD,IAAMvB,EAAK,a","file":"component---src-templates-pluralsight-badge-js-f16fc2a227755ce5ffbe.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React, { useState } from \"react\"\nimport \"./header.scss\"\n\nconst links = [\n  {\n    title: \"Home\",\n    uri: \"/\",\n  },\n  {\n    title: \"About Me\",\n    uri: \"/about\",\n  },\n  {\n    title: \"Skills\",\n    uri: \"/skills\",\n  },\n  {\n    title: \"Blog\",\n    uri: \"/blog\",\n  },\n]\n\nconst NavLinks = () => (\n  <nav className=\"d-flex flex-column text-center\">\n    {links.map((link, idx) => (\n      <div className=\"py-2\" key={idx}>\n        <Link to={link.uri}>{link.title}</Link>\n      </div>\n    ))}\n    <div className=\"py-2\">\n      <a href=\"https://github.com/THISS\" target=\"__blank\">\n        GitHub\n      </a>\n    </div>\n    <div className=\"py-2\">\n      <a\n        href=\"https://www.linkedin.com/in/brenton-holswich/\"\n        target=\"__blank\"\n      >\n        linkedIn\n      </a>\n    </div>\n  </nav>\n)\n\nconst Header = ({ siteTitle, subTitle }) => {\n  const [toggled, setToggled] = useState(false)\n  return (\n    <header className=\"container-fluid header-container\">\n      <section className=\"row\">\n        <div className=\"col-12 pb-2\">\n          <h1>\n            <Link to=\"/\">{siteTitle}</Link>\n          </h1>\n          <h5 className=\"snow\">{subTitle}</h5>\n        </div>\n        <div className=\"col-12 d-flex d-sm-none justify-content-end\">\n          <button\n            className={`icon-bar-container ${toggled && \"toggled\"}`}\n            onClick={() => setToggled(!toggled)}\n          >\n            <span className=\"icon-bar bar1\"></span>\n            <span className=\"icon-bar bar2\"></span>\n            <span className=\"icon-bar bar3\"></span>\n          </button>\n        </div>\n        <div className=\"col-12 d-sm-none d-flex justify-content-center\">\n          {toggled && <NavLinks></NavLinks>}\n        </div>\n        <div className=\"col-12 d-none d-sm-flex justify-content-center\">\n          <NavLinks></NavLinks>          \n        </div>\n      </section>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  subTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  subTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.scss\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            subtitle\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className=\"container-fluid site-container d-flex\">\n        <div className=\"row flex-fill\">\n          <div className=\"d-none d-sm-flex col-sm-4 col-lg-3 col-xl-2 position-fixed h-100\">\n            <div className=\"row\">\n              <Header siteTitle={data.site.siteMetadata.title} subTitle={data.site.siteMetadata.subtitle} />\n            </div>\n          </div>\n          <div className=\"d-sm-none d-flex col-12 flex-fill\">\n            <div className=\"row flex-fill\">\n              <Header siteTitle={data.site.siteMetadata.title} subTitle={data.site.siteMetadata.subtitle} />\n            </div>\n          </div>\n          <div className=\"offset-sm-4 offset-lg-3 offset-xl-2 d-flex flex-fill\">\n            <div className=\"d-flex flex-fill flex-column justify-content-between\">\n              <main className=\"flex-fill d-flex\">{children}</main>\n              <footer>\n                Â© {new Date().getFullYear()}, Built with\n                {` `}\n                <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n              </footer>\n            </div>\n          </div>\n        </div>\n\n      </div>      \n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport Layout from \"../components/layout\"\n\n\nexport default ({ data }) => {\n  const badge = data.pluralsightJson\n  return (\n    <Layout>\n      <div>\n        <h1>{badge.title}</h1>\n        <div>{badge.score}</div>\n        <div>{Math.floor(badge.percentile)}%</div>\n        <div>{badge.dateCompleted}</div>\n        <div>{badge.level}</div>\n        <Img\n          fluid={badge.localImage.childImageSharp.fluid}\n          alt={badge.title}\n          style={{ float: \"left\", marginRight: \"1rem\", width: 150 }}\n        />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($badge: String!) {\n    pluralsightJson(id: { eq: $badge }) {\n      percentile\n      title\n      dateCompleted(fromNow: true)\n      level\n      thumbnailUrl\n      localImage {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      score\n    }\n  }\n`"],"sourceRoot":""}