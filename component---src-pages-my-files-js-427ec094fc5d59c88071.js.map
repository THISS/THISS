{"version":3,"sources":["webpack:///./src/pages/my-files.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_ref","data","console","log","a","createElement","allFile","edges","map","_ref2","index","node","key","relativePath","prettySize","extension","birthTime","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","gatsby_browser_entry","to","defaultProps","Layout","Fragment","header","site","siteMetadata","title","Date","getFullYear","href","_755544856"],"mappings":"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","file":"component---src-pages-my-files-js-427ec094fc5d59c88071.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nexport default ({ data }) => {\n  console.log(data)\n  return (\n    <Layout>\n      <div>\n        <h1>My Site's Files</h1>\n        <table>\n          <thead>\n            <tr>\n              <th>relativePath</th>\n              <th>prettySize</th>\n              <th>extension</th>\n              <th>birthTime</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.allFile.edges.map(({ node }, index) => (\n              <tr key={index}>\n                <td>{node.relativePath}</td>\n                <td>{node.prettySize}</td>\n                <td>{node.extension}</td>\n                <td>{node.birthTime}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allFile {\n      edges {\n        node {\n          relativePath\n          prettySize\n          extension\n          birthTime(fromNow: true)\n        }\n      }\n    }\n  }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <div>\n      <h1>\n        <Link to=\"/\">\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div>\n          <main>{children}</main>\n          <footer>\n            Â© {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}