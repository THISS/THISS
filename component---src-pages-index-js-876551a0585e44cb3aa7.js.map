{"version":3,"sources":["webpack:///./src/utils/typography.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["typography","Typography","fairyGateTheme","scale","rhythm","options","__webpack_require__","d","__webpack_exports__","query","_ref","data","react_default","a","createElement","layout","allMarkdownRemark","totalCount","edges","map","_ref2","node","key","id","gatsby_browser_entry","to","fields","slug","frontmatter","title","date","excerpt","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","color","textDecoration","defaultProps","Layout","Fragment","header","site","siteMetadata","paddingTop","Date","getFullYear","href","_755544856"],"mappings":"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","file":"component---src-pages-index-js-876551a0585e44cb3aa7.js","sourcesContent":["import Typography from \"typography\"\nimport fairyGateTheme from \"typography-theme-fairy-gates\"\n\nconst typography = new Typography(fairyGateTheme)\n\nexport const { scale, rhythm, options } = typography\nexport default typography","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\n\nexport default ({ data }) => {\n  return (\n    <Layout>\n      <div>\n        <h1>\n          A site by me for me!\n        </h1>\n        <h4>check it out I have {data.allMarkdownRemark.totalCount} posts</h4>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link\n              to={node.fields.slug}>\n              <h3>\n                {node.frontmatter.title}{\" \"}\n                <span>\n                  â€” {node.frontmatter.date}\n                </span>\n              </h3>\n              <p>{node.excerpt}</p>\n            </Link> \n          </div>\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            Â© {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}